// Code generated by MockGen. DO NOT EDIT.
// Source: ./definition.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	humidity "github.com/go-sensors/core/humidity"
	units "github.com/go-sensors/core/units"
	gomock "github.com/golang/mock/gomock"
)

// MockRelativeHumiditySensor is a mock of RelativeHumiditySensor interface.
type MockRelativeHumiditySensor struct {
	ctrl     *gomock.Controller
	recorder *MockRelativeHumiditySensorMockRecorder
}

// MockRelativeHumiditySensorMockRecorder is the mock recorder for MockRelativeHumiditySensor.
type MockRelativeHumiditySensorMockRecorder struct {
	mock *MockRelativeHumiditySensor
}

// NewMockRelativeHumiditySensor creates a new mock instance.
func NewMockRelativeHumiditySensor(ctrl *gomock.Controller) *MockRelativeHumiditySensor {
	mock := &MockRelativeHumiditySensor{ctrl: ctrl}
	mock.recorder = &MockRelativeHumiditySensorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRelativeHumiditySensor) EXPECT() *MockRelativeHumiditySensorMockRecorder {
	return m.recorder
}

// RelativeHumidities mocks base method.
func (m *MockRelativeHumiditySensor) RelativeHumidities() <-chan *units.RelativeHumidity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RelativeHumidities")
	ret0, _ := ret[0].(<-chan *units.RelativeHumidity)
	return ret0
}

// RelativeHumidities indicates an expected call of RelativeHumidities.
func (mr *MockRelativeHumiditySensorMockRecorder) RelativeHumidities() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RelativeHumidities", reflect.TypeOf((*MockRelativeHumiditySensor)(nil).RelativeHumidities))
}

// RelativeHumiditySpecs mocks base method.
func (m *MockRelativeHumiditySensor) RelativeHumiditySpecs() []*humidity.RelativeHumiditySpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RelativeHumiditySpecs")
	ret0, _ := ret[0].([]*humidity.RelativeHumiditySpec)
	return ret0
}

// RelativeHumiditySpecs indicates an expected call of RelativeHumiditySpecs.
func (mr *MockRelativeHumiditySensorMockRecorder) RelativeHumiditySpecs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RelativeHumiditySpecs", reflect.TypeOf((*MockRelativeHumiditySensor)(nil).RelativeHumiditySpecs))
}

// Run mocks base method.
func (m *MockRelativeHumiditySensor) Run(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockRelativeHumiditySensorMockRecorder) Run(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockRelativeHumiditySensor)(nil).Run), arg0)
}
